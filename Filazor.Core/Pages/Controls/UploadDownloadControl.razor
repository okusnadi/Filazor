@using Filazor.Core.Data
@implements IDisposable

@inject FileUploadEventNotifyService FileUploadEventNotifyService


<iframe name="dummyframe" id="dummyframe" style="display: none;"></iframe>

<form action="api/upload/fileUpload?uploadDirectory=@UploadDirectory" method="post" enctype="multipart/form-data" target="dummyframe">
    <div class="btn-toolbar py-1 px-2 float-md-right" role="toolbar">

        @*<button type="button" class="btn btn-light btn-sm mr-1">
                <span class="oi oi-data-transfer-download" style="padding-left: 3px; margin-right: 2px; font-size: 14px;"></span>
            </button>*@
        @*<input type="file" name="files" multiple />*@
        @*<button type="button" class="btn btn-light btn-sm mr-1">
                <span class="oi oi-data-transfer-upload" style="padding-left: 3px; margin-right: 2px; font-size: 14px;"></span>
            </button>*@
        <div>
            <label for="fileUpload">
                <span class="oi oi-data-transfer-upload align-middle"></span>
            </label>
            <input id="fileUpload" name="fileUpload" type="file" style="display: none;" onchange="this.form.submit()" multiple />
        </div>

    </div>
</form>


@code {

    [Parameter]
    public string UploadDirectory { get; set; }


    protected override Task OnInitializedAsync()
    {
        FileUploadEventNotifyService.FileUploadCompletedEvent += FileUploadEventNotifyService_FileUploadCompletedEvent;

        return base.OnInitializedAsync();
    }

    private async void FileUploadEventNotifyService_FileUploadCompletedEvent(object sender, EventArgs args)
    {
        await InvokeAsync(() => { this.StateHasChanged(); });
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //if (firstRender)
        //    Console.WriteLine("OnAfterRenderAsync firstRender");
        //else
        //    Console.WriteLine("OnAfterRenderAsync");
    }

    public void Dispose()
    {
        FileUploadEventNotifyService.FileUploadCompletedEvent -= FileUploadEventNotifyService_FileUploadCompletedEvent;
    }
}